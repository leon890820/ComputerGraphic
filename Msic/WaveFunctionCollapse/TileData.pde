public static class TileData {
    public static ColorState[][][] Down = new ColorState[][][]{
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 0
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 1
        {{ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 2
        {{ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 3
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.P, ColorState.W, ColorState.W, ColorState.W, ColorState.P }, {ColorState.P, ColorState.W, ColorState.W, ColorState.W, ColorState.P }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}   // z = 4
    };

    public static ColorState[][][] Line = new ColorState[][][]{
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.D, ColorState.W, ColorState.W, ColorState.W, ColorState.D }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 0
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 1
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.Y, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 2
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 3
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.D, ColorState.W, ColorState.W, ColorState.W, ColorState.D }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}   // z = 4
    };

    public static ColorState[][][] Turn = new ColorState[][][]{
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.D, ColorState.W, ColorState.W, ColorState.W, ColorState.D }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 0
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.W }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 1
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.Y, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.W }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 2
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.W }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 3
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.D, ColorState.A, ColorState.A, ColorState.A, ColorState.D }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}   // z = 4
    };

    public static ColorState[][][] Up = new ColorState[][][]{
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 0
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 1
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }}, // z = 2
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }, {ColorState.A, ColorState.W, ColorState.W, ColorState.W, ColorState.A }}, // z = 3
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.P, ColorState.W, ColorState.W, ColorState.W, ColorState.P }, {ColorState.P, ColorState.W, ColorState.W, ColorState.W, ColorState.P }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}   // z = 4
    };

    public static ColorState[][][] X = new ColorState[][][]{
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.D, ColorState.W, ColorState.W, ColorState.W, ColorState.D }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 0
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.W, ColorState.W, ColorState.W, ColorState.W, ColorState.W }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 1
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.Y, ColorState.X, ColorState.X }, {ColorState.W, ColorState.W, ColorState.W, ColorState.W, ColorState.W }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 2
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.W, ColorState.W, ColorState.W, ColorState.W, ColorState.W }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 3
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.D, ColorState.W, ColorState.W, ColorState.W, ColorState.D }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}   // z = 4
    };

    public static ColorState[][][] Empty = new ColorState[][][]{
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 0
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 1
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 2
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}, // z = 3
        {{ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }, {ColorState.X, ColorState.X, ColorState.X, ColorState.X, ColorState.X }}   // z = 4
    };



    public static Neighbor[][]  DownNeighbor = new Neighbor[][]{
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, //  x
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, // -x
        {new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 2), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3)}, //  z
        {new Neighbor(TileState.Line, 1), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, // -z
        {new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, //  y
        //{new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)},
        {new Neighbor(TileState.Up, 2) }    // -y
    };

    public static Neighbor[][]  LineNeighbor = new Neighbor[][]{
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3) }, //  x
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3) }, // -x
        {new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 2), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3)}, //  z
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Up, 0), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3)}, // -z
        {new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, //  y
        //{new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3) , new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)},
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}    // -y
    };

    public static Neighbor[][]  TurnNeighbor = new Neighbor[][]{
        {new Neighbor(TileState.Down, 1), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 1), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3) }, //  x
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, // -x
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, //  z
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Up, 0), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3)}, // -z
        {new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, //  y
        //{new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3) ,new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)},
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}    // -y
    };

    public static Neighbor[][]  XNeighbor = new Neighbor[][]{
        {new Neighbor(TileState.Down, 1), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 1), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3) }, //  x
        {new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Up, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3) }, // -x
        {new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 2), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3) }, //  z
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Up, 0), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3)}, // -z
        {new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, //  y
        //{new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3) ,new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)},    
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}    // -y
    };

    public static Neighbor[][]  UpNeighbor = new Neighbor[][]{
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3) }, //  x
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3) }, // -x
        {new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3)}, //  z
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, // -z
        {new Neighbor(TileState.Down, 2) }, //  y
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}    // -y
    };


    public static Neighbor[][]  EmptyNeighbor = new Neighbor[][]{
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3) }, //  x
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3) }, // -x
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 3), new Neighbor(TileState. Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, //  z
        {new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}, // -z
        {new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.Up, 0), new Neighbor(TileState.Up, 1), new Neighbor(TileState.Up, 2), new Neighbor(TileState.Up, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3) }, //  y
        //{new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)},
        {new Neighbor(TileState.Down, 0), new Neighbor(TileState.Down, 1), new Neighbor(TileState.Down, 2), new Neighbor(TileState.Down, 3), new Neighbor(TileState.Line, 0), new Neighbor(TileState.Line, 1), new Neighbor(TileState.Line, 2), new Neighbor(TileState.Line, 3), new Neighbor(TileState.Turn, 0), new Neighbor(TileState.Turn, 1), new Neighbor(TileState.Turn, 2), new Neighbor(TileState.Turn, 3), new Neighbor(TileState.X, 0), new Neighbor(TileState.X, 1), new Neighbor(TileState.X, 2), new Neighbor(TileState.X, 3), new Neighbor(TileState.Empty, 0), new Neighbor(TileState.Empty, 1), new Neighbor(TileState.Empty, 2), new Neighbor(TileState.Empty, 3)}    // -y
    };
}
